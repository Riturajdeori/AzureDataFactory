{
	"name": "test1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "employee",
						"type": "DatasetReference"
					},
					"name": "emptable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outdataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "filter1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false) ~> emptable",
				"emptable derive(emp_id = toShort(byName('emp_id')),",
				"          emp_name = toString(byName('emp_name')),",
				"          department_id = toShort(byName('department_id')),",
				"          salary = toShort(byName('salary')),",
				"          manager_id = toShort(byName('manager_id'))) ~> MapDrifted1",
				"MapDrifted1 filter(salary > 12000) ~> filter1",
				"filter1 aggregate(groupBy(department_id),",
				"     salary = avg(salary)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          emp_id as string,",
				"          emp_name as string,",
				"          department_id as string,",
				"          salary as string,",
				"          manager_id as string",
				"     ),",
				"     partitionFileNames:['data1.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}